plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'

//    id 'com.github.dcendents.android-maven'
    id 'maven-publish'
    id 'signing'
}


def versionMajor = 0
def versionMinor = 2
def versionPatch = 0
//
def localProperties = new Properties()
localProperties.load(project.rootProject.file('mylocal.properties').newDataInputStream())

//Maven Central
ext {
    PUBLISH_GROUP_ID = 'com.3xcool'
    PUBLISH_VERSION = "${versionMajor}.${versionMinor}.${versionPatch}"
    PUBLISH_ARTIFACT_ID = 'coroexecutor'

    repoName = 'sonatype'

    libraryDescription = 'Coroutine Executor Library'
    libraryUrl = 'https://github.com/3xcool/CoroExecutor'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'

    developerId = '3xcool'
    developerName = 'Andre Filgueiras'
    developerEmail = 'alg.filgueiras@gmail.com'

    gitConnection = 'scm:git:github.com/3xcool/CoroExecutor.git'
    developerConnection = 'scm:git:ssh://github.com/3xcool/CoroExecutor.git'
    scmUrl = 'https://github.com/3xcool/CoroExecutor'
}

android {
    compileSdkVersion 33

    signingConfigs {
        release {
            storeFile rootProject.file('filgs_key.keystore')
            storePassword localProperties.getProperty("signing.password")
            keyAlias localProperties.getProperty("signing.keyAlias")
            keyPassword localProperties.getProperty("signing.password")
        }

        debug {
            storeFile rootProject.file('filgs_key.keystore')
            storePassword localProperties.getProperty("signing.password")
            keyAlias localProperties.getProperty("signing.keyAlias")
            keyPassword localProperties.getProperty("signing.password")
        }
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:$dagger_version"
    kapt "com.google.dagger:hilt-android-compiler:$dagger_version"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    //Kotlin Coroutines
    def kotlinCoroutineVersion = "1.6.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
}

//apply from: 'bintray.script'

//apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"
apply from: 'publish-mavencentral.gradle'