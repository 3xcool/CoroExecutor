plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'

    id 'com.github.dcendents.android-maven'
    id 'com.jfrog.bintray'
}



def versionMajor = 0
def versionMinor = 1
def versionPatch = 0
//
def localProperties = new Properties()
localProperties.load(project.rootProject.file('mylocal.properties').newDataInputStream())

ext {
    bintrayRepo = 'maven' // Name of the Bintray repo you created
    bintrayName = 'com.3xcool.utility:coroexecutor' // Bintray package name

    publishedGroupId = 'com.3xcool.utility' // Group ID of the SDK which will be added in implementation line of gradle
    artifact = 'coroexecutor' // Artifact ID of the SDK which will be added in implementation line of gradle
    libraryVersion = '0.1.0' //versionMajor * 10000 + versionMinor * 100 + versionPatch  // Version of the library you created in Bintray

    libraryName = 'CoroExecutor' // It is generally the module name
    libraryDescription = 'Coroutine Executor (Conflated, Queue and Concurrent)' // Small description of the library

    siteUrl = 'https://github.com/3xcool/coroexecutor'
    gitUrl = 'https://github.com/3xcool/coroexecutor'

    developerId = '3xcool'
    developerName = 'Andre Filgueiras'
    developerEmail = 'alg.filgueiras@gmail.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]

    //Bintray Credentials
    bintrayUsername = localProperties.getProperty('BINTRAY_USERNAME')
    bintrayUserOrg = localProperties.getProperty('BINTRAY_ORG')
    bintrayApiKey = localProperties.getProperty('BINTRAY_API_KEY')
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.28.3-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28.3-alpha"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02"
    kapt "androidx.hilt:hilt-compiler:1.0.0-alpha02"

    //Kotlin Coroutines
    def kotlinCoroutineVersion = "1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion"
//    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
}

apply from: 'bintray.script'